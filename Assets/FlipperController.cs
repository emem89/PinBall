using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class FlipperController : MonoBehaviour
{
    //HingeJointコンポーネントを入れる
    private HingeJoint myHingeJoint;

    //初期の傾き
    private float defaultAngle = 20;
    //弾いた時の傾き
    private float flickAngle = -20;

    // Start is called before the first frame update
    void Start()
    {
        //HingeJointコンポーネント取得
        this.myHingeJoint = GetComponent<HingeJoint>();

        //フリッパーの傾きを設定
        SetAngle(this.defaultAngle);
    }

    // Update is called once per frame
    void Update()
    {
/* 矢印キー（タッチ確認のためコメントアウト）
            //左矢印キーを押した時左フリッパーを動かす
            if (Input.GetKeyDown(KeyCode.LeftArrow) && tag == "LeftFripperTag")
            {
                SetAngle(this.flickAngle);
            }
            //右矢印キーを押した時右フリッパーを動かす
            if (Input.GetKeyDown(KeyCode.RightArrow) && tag == "RightFripperTag")
            {
                SetAngle(this.flickAngle);
            }

            //矢印キー離された時フリッパーを元に戻す
            if (Input.GetKeyUp(KeyCode.LeftArrow) && tag == "LeftFripperTag")
            {
                SetAngle(this.defaultAngle);
            }
            if (Input.GetKeyUp(KeyCode.RightArrow) && tag == "RightFripperTag")
            {
                SetAngle(this.defaultAngle);
            }
ここまで*/
            if(Input.touchCount > 0)
            {
                //タッチ情報の取得
                Touch touch = Input.GetTouch(0);

                //押した瞬間
                if(touch.phase == TouchPhase.Began)
                {
                    if(Input.mousePosition.x >= Screen.width / 2 &&
                       tag == "RightFripperTag") // 右半分
                    {
                        Debug.Log("右押した");
                        SetAngle(this.flickAngle);

                    }
                    else if (Input.mousePosition.x <= Screen.width / 2 &&
                             tag == "LeftFripperTag") // 左半分
                    {
                        Debug.Log("左押した");
                        SetAngle(this.flickAngle);
                    }
                }
                //押しっぱなし
                if(touch.phase == TouchPhase.Moved)
                {
                    Debug.Log("押しっぱなし、なにもしない");
                }
                //離した瞬間
                if(touch.phase == TouchPhase.Ended)
                {
                
                    if (Input.mousePosition.x >= Screen.width / 2 &&
                        tag == "RightFripperTag") // 右半分
                    {
                        Debug.Log("右離した");
                        SetAngle(this.defaultAngle);

                }
                    else if (Input.mousePosition.x <= Screen.width / 2 &&
                             tag == "LeftFripperTag") // 左半分
                    {
                        Debug.Log("左離した");
                        SetAngle(this.defaultAngle);
                }
                
            }
            }
    }

    //フリッパーの傾きを設定
    public void SetAngle(float angle)
    {
        JointSpring jointSpr = this.myHingeJoint.spring;
        jointSpr.targetPosition = angle;
        this.myHingeJoint.spring = jointSpr;
    }
}
